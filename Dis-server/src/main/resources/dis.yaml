openapi: 3.0.3
servers:
- url: https://erender-test.ts.telekom.si:8445/api
  description: Dis rest server
info:
  version: 1.0.1
  title: Dis API
paths:
  /documents/query:
    get:
      tags:
      - provisioning
      summary: queries for documents
      operationId: getDocuments
      description: gets documents in Dis
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: query
        name: dql
        description: dql to retrieve document
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDocumentsResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/{rObjectId}:
    get:
      tags:
      - provisioning
      summary: get properties of a document
      operationId: getDocument
      description: retrieve properties and renditions of a document in Dis platform
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: path
        name: rObjectId
        description: unique document identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: document not found        
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - provisioning
      summary: update document
      operationId: updateDocument
      description: update properties and content in Dis platform
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: path
        name: rObjectId
        description: unique document identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDocumentRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '404':
          description: document not found        
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/{rObjectId}/content:
    get:
      tags:
      - provisioning
      summary: get content url of document
      operationId: getContent
      description: retrieve content of document in Dis platform
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: path
        name: rObjectId
        description: unique document identifier
        required: true
        schema:
          type: string
      - in: query
        name: format
        description: format of document or null for primary content if empty or null take primary content else renditions. format can be any of documentum formats like pdf tiff word odf xlsx11 xlsx12
        required: true
        schema:
          type: string
          example: pdf
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentContent'
        '404':
          description: document not found
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/{rObjectId}/destroy:
    post:
      tags:
      - provisioning
      summary: destroy document
      operationId: destroyDocument
      description: deletes document in Dis platform
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: path
        name: rObjectId
        description: unique document identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/{rObjectId}/promote:
    post:
      tags:
      - provisioning
      summary: promote document
      operationId: promoteDocument
      description: promote the document in Dis platform
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: path
        name: rObjectId
        description: unique document identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/{rObjectId}/demote:
    post:
      tags:
      - provisioning
      summary: demote document
      operationId: demoteDocument
      description: demote the document in Dis platform
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      - in: path
        name: rObjectId
        description: unique document identifier
        required: true
        schema:
          type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/create:
    post:
      tags:
      - provisioning
      summary: creates a new document from template
      operationId: createDocument
      description: creates a new document in Dis
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDocumentRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /documents/import:
    post:
      tags:
      - provisioning
      summary: imports a new document
      operationId: importDocument
      description: imports a new document in Dis
      security:
      - BasicAuth: []
      parameters:
      - in: header
        name: X-Transaction-Id
        schema:
          type: string
        example: 123e4567-e89b-12d3-a456-426614174000
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportDocumentRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  headers:
    XTransactionId:
      description: Global transaction identifier
      schema:
        type: string
      example: 123e4567-e89b-12d3-a456-426614174000
  schemas:
    NewDocumentRequest:
      type: object
      required:
      - profileId
      - attributes
      - rolesUsers
      - templateObjectRObjectId
      - stateId
      properties:
        profileId:
          type: string
          description: id of profile in DIS sistem
          example: mob_subscriber_document
        stateId:
          type: string
          description: target state of document to which document would be set to
          example: any of "draft" "effective" "archive" or other state that is specied in profile for profile
        templateObjectRObjectId:
          type: string
          description: rObjectId of document template used to create initial version of document
          example: 0900000191cfbdf8
        attributes:
          type: array
          description: A list of attributes to be set on document
          items:
            $ref: '#/components/schemas/Attribute'
        rolesUsers:
          type: array
          description: A list of user roles to be set on document
          items:
            $ref: '#/components/schemas/RoleUsers'
    ImportDocumentRequest:
      type: object
      required:
      - profileId
      - attributes
      - rolesUsers
      - content
      - stateId
      properties:
        profileId:
          type: string
          description: id of profile in DIS sistem
          example: mob_subscriber_document
        stateId:
          type: string
          description: target state of document to import to
          example: any of "draft" "effective" "archive" or other state that is specied in profile for profile
        attributes:
          type: array
          description: A list of attributes to be set on document
          items:
            $ref: '#/components/schemas/Attribute'
        rolesUsers:
          type: array
          description: A list of user roles to be set on document
          items:
            $ref: '#/components/schemas/RoleUsers'
        content:
          $ref: '#/components/schemas/DocumentContent'
    UpdateDocumentRequest:
      type: object
      required:
      - version
      properties:
        version:
          type: string
          description: which version to update
          enum: [major, minor, same]
        attributes:
          type: array
          description: A list of attributes to be set on document
          items:
            $ref: '#/components/schemas/Attribute'
        rolesUsers:
          type: array
          description: A list of user roles to be set on document
          items:
            $ref: '#/components/schemas/RoleUsers'
        content:
          $ref: '#/components/schemas/DocumentContent'
    Attribute:
      type: object
      properties:
        name:
          type: string
          description: attribute name
          example: title
        values:
          type: array
          description: values of atribute
          example: value1, value2
          items:
            type: string
    RoleUsers:
      type: object
      properties:
        roleId:
          type: string
          description: role id
          example: example role ids are one of "coordinator", "user", "administrator", "erender"
        values:
          type: array
          description: name of users or groups from AD that are synced in content management system
          example: raifk, lokart, dm_world
          items:
            type: string
    QueryDocumentsResponse:
      type: object
      properties:
        documents:
          type: array
          description: array od documents
          items:
            $ref: '#/components/schemas/Document'
      required:
      - documents
    DocumentContent:
      type: object
      required:
      - format
      - contentBase64
      properties:
        format:
          type: string
          description: documentum format of document
          example: any of "odt" "msw12" "excelbook"
        data:
          type: string
          description: base64 encoded content of a document
    Document:
      type: object
      description: Document from content management system
      properties:
        rObjectId:
          type: string
          description: rObjectId unique identifier from content management system
          example: 0900000191cdbe4c
        objectName:
          type: string
          description: rObjectId unique identifier from content management system
          example: 0900000191cdbe4c
        releaseNumber:
          type: integer
          description: release nuber of docuent
          example: 0
        attributes:
          type: array
          description: A list of attributes to be set on document
          items:
            $ref: '#/components/schemas/Attribute'
        formats:
          type: array
          description: A list of available document formats
          items:
            type: string
        rolesUsers:
          type: array
          description: A list of users and roles
          items:
            $ref: '#/components/schemas/RoleUsers'
    Error:
      type: object
      required:
      - code
      - reason
      properties:
        code:
          type: string
          description: Application related code.
        reason:
          type: string
          description: Text that explains the reason for error.
        message:
          type: string
          description: (optional) Text that provides more details and corrective actions related to the error.
        referenceError:
          $ref: '#/components/schemas/Error'